// Define the supported languages
type Language = {
  code: string;
  name: string;
  flag: string;
};
export const languages: Language[] = [
  { code: "en", name: "English", flag: "üá∫üá∏" },
  { code: "es", name: "Espa√±ol", flag: "üá™üá∏" },
  { code: "fr", name: "Fran√ßais", flag: "üá´üá∑" },
  { code: "de", name: "Deutsch", flag: "üá©üá™" },
  { code: "ru", name: "–†—É—Å—Å–∫–∏–π", flag: "üá∑üá∫" },
];
export type TranslationKeys = {
  common: Record<string, string>;
  table: Record<string, string>;
};

type Translations = {
  en: TranslationKeys;
  es: TranslationKeys;
  fr: TranslationKeys;
  de: TranslationKeys;
  ru: TranslationKeys;
};
// Define the translations
export const translations: Translations = {
  en: {
    common: {
      earn: "Earn",
      ecosystem: "Ecosystem",
      analytics: "Analytics",
      morphoAppV2: "Morpho App V2",
      delegate: "Delegate",
      morphoDocs: "Morpho Docs",
      morphoOptimizers: "Morpho Optimizers",
      feedback: "Feedback",
      termsOfUse: "Terms of Use",
      connectWallet: "Connect Wallet",
      searchVaults: "Search vaults...",
      searchProperties: "Search for properties...",
      editProperties: "Edit properties",
      howDoesItWork: "How does it work?",
      depositInVault: "Deposit in a vault",
      totalDeposits: "Total Deposits",
      totalBorrow: "Total Borrow",
      projectsOnMorpho: "Projects building on Morpho",
      visit: "Visit",
      launchApp: "Launch App",
      overview: "Overview",
      morphoIntegration: "Morpho integration",
      url: "URL",
      integrationDocs: "Integration Docs",
      social: "Social",
      docs: "Docs",
      totalMorpho: "Total Morpho",
      morphoMainnet: "Morpho - Mainnet",
      morphoBase: "Morpho - Base",
      morphoOptimizer: "Morpho Optimizer",
      tvl: "TVL",
      marketsCreated: "Markets created",
      morphoVaults: "Morpho Vaults",
      averageAPYImprovement: "Average APY Improvement",
      vaultInfo: "Vault Info",
      vaultAllocationBreakdown: "Vault Allocation Breakdown",
      vaultAllocationBreakdownNote:
        "The table below shows a breakdown of the market exposures of the vault. For example, the Supply APY represents the amount of interest earned by the vault for supplying liquidity to the market.",
      vaultReallocations: "Vault Reallocations",
      userActivity: "User Activity",
      supplyPositions: "Supply Positions",
    },
    table: {
      vaultName: "Vault Name",
      token: "Token",
      totalSupply: "Total Supply",
      netAPY: "Net APY",
      instantAPY: "Instant APY",
      supplyAPY: "Vault APY",
      curator: "Curator",
      collateral: "Collateral",
      rewards: "Rewards",
      performanceFee: "Performance Fee",
      utilization: "Utilization",
      vaultAddress: "Vault Address",
      liqudity: "Liquidity",
      guardianAddress: "Guardian Address",
    },
  },
  es: {
    common: {
      earn: "Ganar",
      ecosystem: "Ecosistema",
      analytics: "Anal√≠tica",
      morphoAppV2: "Morpho App V2",
      delegate: "Delegar",
      morphoDocs: "Documentos Morpho",
      morphoOptimizers: "Optimizadores Morpho",
      feedback: "Comentarios",
      termsOfUse: "T√©rminos de Uso",
      connectWallet: "Conectar Billetera",
      searchVaults: "Buscar b√≥vedas...",
      searchProperties: "Buscar propiedades...",
      editProperties: "Editar propiedades",
      howDoesItWork: "¬øC√≥mo funciona?",
      depositInVault: "Depositar en b√≥veda",
      totalDeposits: "Dep√≥sitos Totales",
      totalBorrow: "Pr√©stamo Total",
      projectsOnMorpho: "Proyectos construyendo en Morpho",
      visit: "Visitar",
      launchApp: "Iniciar App",
      overview: "Visi√≥n general",
      morphoIntegration: "Integraci√≥n Morpho",
      url: "URL",
      integrationDocs: "Documentos de Integraci√≥n",
      social: "Social",
      docs: "Documentos",
      totalMorpho: "Morpho Total",
      morphoMainnet: "Morpho - Red Principal",
      morphoBase: "Morpho - Base",
      morphoOptimizer: "Optimizador Morpho",
      tvl: "TVL",
      marketsCreated: "Mercados creados",
      morphoVaults: "B√≥vedas Morpho",
      averageAPYImprovement: "Mejora Promedio de APY",
      vaultInfo: "Informaci√≥n de B√≥veda",
      vaultAllocationBreakdown: "Desglose de Asignaci√≥n de B√≥veda",
      vaultAllocationBreakdownNote:
        "La tabla a continuaci√≥n muestra un desglose de las exposiciones al mercado de la b√≥veda. Por ejemplo, el APY de Suministro representa la cantidad de inter√©s ganado por la b√≥veda por suministrar liquidez al mercado.",
      vaultReallocations: "Reasignaciones de B√≥veda",
    },
    table: {
      vaultName: "Nombre de B√≥veda",
      token: "Token",
      totalSupply: "Suministro Total",
      netAPY: "APY Neto",
      instantAPY: "APY Instant√°neo",
      supplyAPY: "APY de B√≥veda",
      curator: "Curador",
      collateral: "Colateral",
      rewards: "Recompensas",
      performanceFee: "Comisi√≥n de Rendimiento",
      utilization: "Utilizaci√≥n",
      vaultAddress: "Direcci√≥n de B√≥veda",
      liquidity: "Liquidez",
      guardianAddress: "Direcci√≥n del Guardi√°n",
      supplyPositions: "Posiciones de Suministro",
      userActivity: "Actividad del Usuario",
    },
  },
  fr: {
    common: {
      earn: "Gagner",
      ecosystem: "√âcosyst√®me",
      analytics: "Analytique",
      morphoAppV2: "Morpho App V2",
      delegate: "D√©l√©guer",
      morphoDocs: "Docs Morpho",
      morphoOptimizers: "Optimiseurs Morpho",
      feedback: "Retour",
      termsOfUse: "Conditions d'Utilisation",
      connectWallet: "Connecter Portefeuille",
      searchVaults: "Rechercher coffres...",
      searchProperties: "Rechercher des propri√©t√©s...",
      editProperties: "Modifier propri√©t√©s",
      howDoesItWork: "Comment √ßa marche?",
      depositInVault: "D√©poser dans un coffre",
      totalDeposits: "D√©p√¥ts Totaux",
      totalBorrow: "Emprunt Total",
      projectsOnMorpho: "Projets construisant sur Morpho",
      visit: "Visiter",
      launchApp: "Lancer App",
      overview: "Aper√ßu",
      morphoIntegration: "Int√©gration Morpho",
      url: "URL",
      integrationDocs: "Docs d'Int√©gration",
      social: "Social",
      docs: "Docs",
      totalMorpho: "Morpho Total",
      morphoMainnet: "Morpho - R√©seau Principal",
      morphoBase: "Morpho - Base",
      morphoOptimizer: "Optimiseur Morpho",
      tvl: "TVL",
      marketsCreated: "March√©s cr√©√©s",
      morphoVaults: "Coffres Morpho",
      averageAPYImprovement: "Am√©lioration Moyenne d'APY",
      vaultInfo: "Informations du Coffre",
      vaultAllocationBreakdown: "R√©partition de l'Allocation du Coffre",
      vaultAllocationBreakdownNote:
        "Le tableau ci-dessous montre une r√©partition des expositions du march√© du coffre. Par exemple, l'APY de Fourniture repr√©sente le montant des int√©r√™ts gagn√©s par le coffre pour fournir de la liquidit√© au march√©.",
      vaultReallocations: "R√©affectations du Coffre",
      supplyPositions: "Positions de Fourniture",
      userActivity: "Activit√© de l'Utilisateur",
    },
    table: {
      vaultName: "Nom du Coffre",
      token: "Jeton",
      totalSupply: "Offre Totale",
      netAPY: "APY Net",
      instantAPY: "APY Instantan√©",
      supplyAPY: "APY du Coffre",
      curator: "Curateur",
      collateral: "Collat√©ral",
      rewards: "R√©compenses",
      performanceFee: "Frais de Performance",
      utilization: "Utilisation",
      vaultAddress: "Adresse du Coffre",
      liquidity: "Liquidit√©",
      guardianAddress: "Adresse du Gardien",
    },
  },
  de: {
    common: {
      earn: "Verdienen",
      ecosystem: "√ñkosystem",
      analytics: "Analytik",
      morphoAppV2: "Morpho App V2",
      delegate: "Delegieren",
      morphoDocs: "Morpho Dokumente",
      morphoOptimizers: "Morpho Optimierer",
      feedback: "Feedback",
      termsOfUse: "Nutzungsbedingungen",
      connectWallet: "Wallet verbinden",
      searchVaults: "Tresore suchen...",
      searchProperties: "Eigenschaften suchen...",
      editProperties: "Eigenschaften bearbeiten",
      howDoesItWork: "Wie funktioniert es?",
      depositInVault: "In Tresor einzahlen",
      totalDeposits: "Gesamteinlagen",
      totalBorrow: "Gesamtausleihe",
      projectsOnMorpho: "Projekte auf Morpho",
      visit: "Besuchen",
      launchApp: "App starten",
      overview: "√úberblick",
      morphoIntegration: "Morpho Integration",
      url: "URL",
      integrationDocs: "Integrationsdokumente",
      social: "Sozial",
      docs: "Dokumente",
      totalMorpho: "Gesamt Morpho",
      morphoMainnet: "Morpho - Hauptnetz",
      morphoBase: "Morpho - Basis",
      morphoOptimizer: "Morpho Optimierer",
      tvl: "TVL",
      marketsCreated: "Erstellte M√§rkte",
      morphoVaults: "Morpho Tresore",
      averageAPYImprovement: "Durchschnittliche APY-Verbesserung",
      vaultInfo: "Tresor-Informationen",
      vaultAllocationBreakdown: "Aufschl√ºsselung der Tresorzuteilung",
      vaultAllocationBreakdownNote:
        "Die folgende Tabelle zeigt eine Aufschl√ºsselung der Marktexpositionen des Tresors. Zum Beispiel stellt das Supply-APY den Betrag der Zinsen dar, die der Tresor durch die Bereitstellung von Liquidit√§t f√ºr den Markt verdient.",
      vaultReallocations: "Tresor-Neuverteilungen",
      supplyPositions: "Versorgungspositionen",
      userActivity: "Nutzeraktivit√§t",
    },
    table: {
      vaultName: "Tresorname",
      token: "Token",
      totalSupply: "Gesamtangebot",
      netAPY: "Netto-APY",
      instantAPY: "Sofort-APY",
      supplyAPY: "Tresor-APY",
      curator: "Kurator",
      collateral: "Sicherheit",
      rewards: "Belohnungen",
      performanceFee: "Leistungsgeb√ºhr",
      utilization: "Auslastung",
      vaultAddress: "Tresor-Adresse",
      liquidity: "Liquidit√§t",
      guardianAddress: "W√§chter-Adresse",
    },
  },
  ru: {
    common: {
      earn: "–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å",
      ecosystem: "–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞",
      analytics: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞",
      morphoAppV2: "Morpho App V2",
      delegate: "–î–µ–ª–µ–≥–∏—Ä–æ–≤–∞—Ç—å",
      morphoDocs: "–î–æ–∫—É–º–µ–Ω—Ç—ã Morpho",
      morphoOptimizers: "–û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä—ã Morpho",
      feedback: "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
      termsOfUse: "–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
      connectWallet: "–ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫",
      searchVaults: "–ü–æ–∏—Å–∫ —Ö—Ä–∞–Ω–∏–ª–∏—â...",
      searchProperties: "–ü–æ–∏—Å–∫ —Å–≤–æ–π—Å—Ç–≤...",
      editProperties: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞",
      howDoesItWork: "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?",
      depositInVault: "–î–µ–ø–æ–∑–∏—Ç –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ",
      totalDeposits: "–í—Å–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤",
      totalBorrow: "–í—Å–µ–≥–æ –∑–∞–∏–º—Å—Ç–≤–æ–≤–∞–Ω–∏–π",
      projectsOnMorpho: "–ü—Ä–æ–µ–∫—Ç—ã –Ω–∞ Morpho",
      visit: "–ü–æ—Å–µ—Ç–∏—Ç—å",
      launchApp: "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
      overview: "–û–±–∑–æ—Ä",
      morphoIntegration: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Morpho",
      url: "URL",
      integrationDocs: "–î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      social: "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏",
      docs: "–î–æ–∫—É–º–µ–Ω—Ç—ã",
      totalMorpho: "–í—Å–µ–≥–æ Morpho",
      morphoMainnet: "Morpho - –û—Å–Ω–æ–≤–Ω–∞—è —Å–µ—Ç—å",
      morphoBase: "Morpho - –ë–∞–∑–∞",
      morphoOptimizer: "–û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä Morpho",
      tvl: "TVL",
      marketsCreated: "–°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ä—ã–Ω–∫–∏",
      morphoVaults: "–•—Ä–∞–Ω–∏–ª–∏—â–∞ Morpho",
      averageAPYImprovement: "–°—Ä–µ–¥–Ω–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ APY",
      vaultInfo: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ",
      vaultAllocationBreakdown: "–†–∞–∑–±–∏–≤–∫–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞",
      vaultAllocationBreakdownNote:
        "–¢–∞–±–ª–∏—Ü–∞ –Ω–∏–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, APY –æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—É–º–º—É –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤, –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏ –Ω–∞ —Ä—ã–Ω–æ–∫.",
      vaultReallocations: "–ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞",
      supplyPositions: "–ü–æ–∑–∏—Ü–∏–∏ –ø–æ –ø–æ—Å—Ç–∞–≤–∫–µ",
      userActivity: "–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    },
    table: {
      vaultName: "–ù–∞–∑–≤–∞–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞",
      token: "–¢–æ–∫–µ–Ω",
      totalSupply: "–û–±—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
      netAPY: "–ß–∏—Å—Ç—ã–π APY",
      instantAPY: "–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π APY",
      supplyAPY: "APY —Ö—Ä–∞–Ω–∏–ª–∏—â–∞",
      curator: "–ö—É—Ä–∞—Ç–æ—Ä",
      collateral: "–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ",
      rewards: "–ù–∞–≥—Ä–∞–¥—ã",
      performanceFee: "–ö–æ–º–∏—Å—Å–∏—è –∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
      utilization: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ",
      vaultAddress: "–ê–¥—Ä–µ—Å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞",
      liquidity: "–õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å",
      guardianAddress: "–ê–¥—Ä–µ—Å –°—Ç—Ä–∞–∂–∞",
    },
  },
};

// Get translation for a key
export function getTranslation(language: string, key: string): string {
  const keys = key.split(".");
  let result: unknown = translations[language as keyof Translations];

  for (const k of keys) {
    if (typeof result !== "object" || result === null) return key;
    result = (result as Record<string, unknown>)[k];
  }

  return typeof result === "string" ? result : key;
}
