// Define the supported languages
export const languages: any[] = [
  { code: "en", name: "English", flag: "üá∫üá∏" },
  { code: "es", name: "Espa√±ol", flag: "üá™üá∏" },
  { code: "fr", name: "Fran√ßais", flag: "üá´üá∑" },
  { code: "de", name: "Deutsch", flag: "üá©üá™" },
  { code: "ru", name: "–†—É—Å—Å–∫–∏–π", flag: "üá∑üá∫" },
];

// Define the translations
export const translations = {
  en: {
    common: {
      earn: "Earn",
      ecosystem: "Ecosystem",
      analytics: "Analytics",
      morphoAppV2: "Morpho App V2",
      delegate: "Delegate",
      morphoDocs: "Morpho Docs",
      morphoOptimizers: "Morpho Optimizers",
      feedback: "Feedback",
      termsOfUse: "Terms of Use",
      connectWallet: "Connect Wallet",
      searchVaults: "Search vaults...",
      editProperties: "Edit properties",
      howDoesItWork: "How does it work?",
      depositInVault: "Deposit in a vault",
      totalDeposits: "Total Deposits",
      totalBorrow: "Total Borrow",
      projectsOnMorpho: "Projects building on Morpho",
      launchApp: "Launch App",
      overview: "Overview",
      morphoIntegration: "Morpho integration",
      url: "URL",
      integrationDocs: "Integration Docs",
      social: "Social",
      docs: "Docs",
      totalMorpho: "Total Morpho",
      morphoMainnet: "Morpho - Mainnet",
      morphoBase: "Morpho - Base",
      morphoOptimizer: "Morpho Optimizer",
      tvl: "TVL",
      marketsCreated: "Markets created",
      morphoVaults: "Morpho Vaults",
      averageAPYImprovement: "Average APY Improvement",
    },
    table: {
      vaultName: "Vault Name",
      token: "Token",
      totalSupply: "Total Supply",
      netAPY: "Net APY",
      supplyAPY: "Supply APY",
      curator: "Curator",
      collateral: "Collateral",
      rewards: "Rewards",
      performanceFee: "Performance Fee",
      utilization: "Utilization",
    },
  },
  es: {
    common: {
      earn: "Ganar",
      ecosystem: "Ecosistema",
      analytics: "Anal√≠tica",
      morphoAppV2: "Morpho App V2",
      delegate: "Delegar",
      morphoDocs: "Documentos Morpho",
      morphoOptimizers: "Optimizadores Morpho",
      feedback: "Comentarios",
      termsOfUse: "T√©rminos de Uso",
      connectWallet: "Conectar Billetera",
      searchVaults: "Buscar b√≥vedas...",
      editProperties: "Editar propiedades",
      howDoesItWork: "¬øC√≥mo funciona?",
      depositInVault: "Depositar en b√≥veda",
      totalDeposits: "Dep√≥sitos Totales",
      totalBorrow: "Pr√©stamo Total",
      projectsOnMorpho: "Proyectos construyendo en Morpho",
      launchApp: "Iniciar App",
      overview: "Visi√≥n general",
      morphoIntegration: "Integraci√≥n Morpho",
      url: "URL",
      integrationDocs: "Documentos de Integraci√≥n",
      social: "Social",
      docs: "Documentos",
      totalMorpho: "Morpho Total",
      morphoMainnet: "Morpho - Red Principal",
      morphoBase: "Morpho - Base",
      morphoOptimizer: "Optimizador Morpho",
      tvl: "TVL",
      marketsCreated: "Mercados creados",
      morphoVaults: "B√≥vedas Morpho",
      averageAPYImprovement: "Mejora Promedio de APY",
    },
    table: {
      vaultName: "Nombre de B√≥veda",
      token: "Token",
      totalSupply: "Suministro Total",
      netAPY: "APY Neto",
      supplyAPY: "APY de Suministro",
      curator: "Curador",
      collateral: "Colateral",
      rewards: "Recompensas",
      performanceFee: "Comisi√≥n de Rendimiento",
      utilization: "Utilizaci√≥n",
    },
  },
  fr: {
    common: {
      earn: "Gagner",
      ecosystem: "√âcosyst√®me",
      analytics: "Analytique",
      morphoAppV2: "Morpho App V2",
      delegate: "D√©l√©guer",
      morphoDocs: "Docs Morpho",
      morphoOptimizers: "Optimiseurs Morpho",
      feedback: "Retour",
      termsOfUse: "Conditions d'Utilisation",
      connectWallet: "Connecter Portefeuille",
      searchVaults: "Rechercher coffres...",
      editProperties: "Modifier propri√©t√©s",
      howDoesItWork: "Comment √ßa marche?",
      depositInVault: "D√©poser dans un coffre",
      totalDeposits: "D√©p√¥ts Totaux",
      totalBorrow: "Emprunt Total",
      projectsOnMorpho: "Projets construisant sur Morpho",
      launchApp: "Lancer App",
      overview: "Aper√ßu",
      morphoIntegration: "Int√©gration Morpho",
      url: "URL",
      integrationDocs: "Docs d'Int√©gration",
      social: "Social",
      docs: "Docs",
      totalMorpho: "Morpho Total",
      morphoMainnet: "Morpho - R√©seau Principal",
      morphoBase: "Morpho - Base",
      morphoOptimizer: "Optimiseur Morpho",
      tvl: "TVL",
      marketsCreated: "March√©s cr√©√©s",
      morphoVaults: "Coffres Morpho",
      averageAPYImprovement: "Am√©lioration Moyenne d'APY",
    },
    table: {
      vaultName: "Nom du Coffre",
      token: "Jeton",
      totalSupply: "Offre Totale",
      netAPY: "APY Net",
      supplyAPY: "APY d'Offre",
      curator: "Curateur",
      collateral: "Collat√©ral",
      rewards: "R√©compenses",
      performanceFee: "Frais de Performance",
      utilization: "Utilisation",
    },
  },
  de: {
    common: {
      earn: "Verdienen",
      ecosystem: "√ñkosystem",
      analytics: "Analytik",
      morphoAppV2: "Morpho App V2",
      delegate: "Delegieren",
      morphoDocs: "Morpho Dokumente",
      morphoOptimizers: "Morpho Optimierer",
      feedback: "Feedback",
      termsOfUse: "Nutzungsbedingungen",
      connectWallet: "Wallet verbinden",
      searchVaults: "Tresore suchen...",
      editProperties: "Eigenschaften bearbeiten",
      howDoesItWork: "Wie funktioniert es?",
      depositInVault: "In Tresor einzahlen",
      totalDeposits: "Gesamteinlagen",
      totalBorrow: "Gesamtausleihe",
      projectsOnMorpho: "Projekte auf Morpho",
      launchApp: "App starten",
      overview: "√úberblick",
      morphoIntegration: "Morpho Integration",
      url: "URL",
      integrationDocs: "Integrationsdokumente",
      social: "Sozial",
      docs: "Dokumente",
      totalMorpho: "Gesamt Morpho",
      morphoMainnet: "Morpho - Hauptnetz",
      morphoBase: "Morpho - Basis",
      morphoOptimizer: "Morpho Optimierer",
      tvl: "TVL",
      marketsCreated: "Erstellte M√§rkte",
      morphoVaults: "Morpho Tresore",
      averageAPYImprovement: "Durchschnittliche APY-Verbesserung",
    },
    table: {
      vaultName: "Tresorname",
      token: "Token",
      totalSupply: "Gesamtangebot",
      netAPY: "Netto-APY",
      supplyAPY: "Angebots-APY",
      curator: "Kurator",
      collateral: "Sicherheit",
      rewards: "Belohnungen",
      performanceFee: "Leistungsgeb√ºhr",
      utilization: "Auslastung",
    },
  },
  ru: {
    common: {
      earn: "–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å",
      ecosystem: "–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞",
      analytics: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞",
      morphoAppV2: "Morpho App V2",
      delegate: "–î–µ–ª–µ–≥–∏—Ä–æ–≤–∞—Ç—å",
      morphoDocs: "–î–æ–∫—É–º–µ–Ω—Ç—ã Morpho",
      morphoOptimizers: "–û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä—ã Morpho",
      feedback: "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
      termsOfUse: "–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
      connectWallet: "–ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫",
      searchVaults: "–ü–æ–∏—Å–∫ —Ö—Ä–∞–Ω–∏–ª–∏—â...",
      editProperties: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞",
      howDoesItWork: "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?",
      depositInVault: "–î–µ–ø–æ–∑–∏—Ç –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ",
      totalDeposits: "–í—Å–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤",
      totalBorrow: "–í—Å–µ–≥–æ –∑–∞–∏–º—Å—Ç–≤–æ–≤–∞–Ω–∏–π",
      projectsOnMorpho: "–ü—Ä–æ–µ–∫—Ç—ã –Ω–∞ Morpho",
      launchApp: "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
      overview: "–û–±–∑–æ—Ä",
      morphoIntegration: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Morpho",
      url: "URL",
      integrationDocs: "–î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      social: "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏",
      docs: "–î–æ–∫—É–º–µ–Ω—Ç—ã",
      totalMorpho: "–í—Å–µ–≥–æ Morpho",
      morphoMainnet: "Morpho - –û—Å–Ω–æ–≤–Ω–∞—è —Å–µ—Ç—å",
      morphoBase: "Morpho - –ë–∞–∑–∞",
      morphoOptimizer: "–û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä Morpho",
      tvl: "TVL",
      marketsCreated: "–°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ä—ã–Ω–∫–∏",
      morphoVaults: "–•—Ä–∞–Ω–∏–ª–∏—â–∞ Morpho",
      averageAPYImprovement: "–°—Ä–µ–¥–Ω–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ APY",
    },
    table: {
      vaultName: "–ù–∞–∑–≤–∞–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞",
      token: "–¢–æ–∫–µ–Ω",
      totalSupply: "–û–±—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
      netAPY: "–ß–∏—Å—Ç—ã–π APY",
      supplyAPY: "APY –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
      curator: "–ö—É—Ä–∞—Ç–æ—Ä",
      collateral: "–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ",
      rewards: "–ù–∞–≥—Ä–∞–¥—ã",
      performanceFee: "–ö–æ–º–∏—Å—Å–∏—è –∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
      utilization: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ",
    },
  },
};

// Get translation for a key
export function getTranslation(language: string, key: string) {
  const keys = key.split(".");
  let result: any = translations[language as keyof typeof translations];

  for (const k of keys) {
    if (!result) return key;
    result = result[k as keyof typeof result];
  }

  return result || key;
}
